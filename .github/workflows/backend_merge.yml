name: Build, Publish and Deploy Docker Image

on:
  pull_request:
    types: [closed]
    branches: [main]
    paths:
      - "packages/backend/**"

jobs:
  build-smoke-test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: packages/backend

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - name: Setup Node v22
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Enable Corepack
        run: corepack enable

      - name: Set Yarn version to @stable
        run: corepack prepare yarn@stable --activate

      # Enable Corepack for Yarn 4
      - name: Enable Corepack
        run: corepack enable

      # Set Yarn version to the latest stable version
      - name: Set Yarn version to @stable
        run: corepack prepare yarn@stable --activate

      # Get the Yarn cache directory path
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      # Cache the Yarn cache directory
      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Build TypeScript app
        run: yarn build

      - name: Run Vitest tests
        run: yarn vitest
  update-version:
    runs-on: ubuntu-latest

    needs: build-smoke-test

    defaults:
      run:
        working-directory: packages/backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node v22
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true

      - name: ⏫ Bumping version
        uses: jpb06/bump-package@latest
        with:
          major-keywords: BREAKING CHANGE
          minor-keywords: feat,minor
          patch-keywords: fix,chore
          should-default-to-patch: true

      # # Enable Corepack for Yarn 4
      # - name: Enable Corepack
      #   run: corepack enable

      # # Set Yarn version to the latest stable version
      # - name: Set Yarn version to @stable
      #   run: corepack prepare yarn@stable --activate

      # # Get the Yarn cache directory path
      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      # # Restore the Yarn cache
      # - uses: actions/cache@v4
      #   id: yarn-cache
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-

      # # Install dependencies (this will use the cached packages if available)
      # - name: Install dependencies
      #   run: yarn install

      # - name: Bump release version
      #   working-directory: packages/backend
      #   id: bump-version
      #   run: |
      #     yarn version patch

      # - name: Update package.json
      #   working-directory: packages/backend
      #   run: |
      #     git config --global user.email "github-actions[bot]@users.noreply.github.com"
      #     git config --global user.name "github-actions[bot]"
      #     git add package.json
      #     git push origin main --tags

  build:
    runs-on: ubuntu-latest

    needs: update-version

    defaults:
      run:
        working-directory: packages/backend

    steps:
      - uses: actions/checkout@v4

      - name: Read package.json
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: packages/backend

      - name: Log read version
        run: echo ${{ steps.package-version.outputs.current-version }}

      - name: Set up Docker
        uses: docker-practice/actions-setup-docker@master

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        run: |
          docker buildx build \
            --platform linux/arm64 \
            -t ghcr.io/${{ github.repository }}/estate-metrics:${{ steps.package-version.outputs.current-version }} \
            -t ghcr.io/${{ github.repository }}/estate-metrics:latest \
            --push .

  deploy:
    runs-on: ubuntu-latest

    needs: build

    defaults:
      run:
        working-directory: packages/backend

    steps:
      - uses: actions/checkout@v4

      - name: Read package.json
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: packages/backend

      - name: Pull New Image and Restart
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          password: ${{ secrets.SSH_PASSPHRASE }}
          port: 8362
          script: |
            source ~/.zshrc
            echo ${{ secrets.ACCESS_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull ghcr.io/${{ github.repository }}/estate-metrics:latest

            # Navigate to the specified directory
            cd ~/Docker

            # Check if the repository has already been cloned
            if [ ! -d "estatemetrics" ]; then
              # Clone the private repository
              git clone https://github.com/rileyhilliard/estatemetrics.git
              cd estatemetrics
            else
              # Navigate into the repository directory
              cd estatemetrics
              
              # Pull the latest changes from the repository
              git pull
            fi

            # Navigate to the docker-compose directory
            cd packages/dockers/EstateMetrics

            # Run docker-compose
            docker-compose up -d
